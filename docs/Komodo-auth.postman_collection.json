{
	"info": {
		"_postman_id": "c4546c33-2385-40b0-bed3-5b4b94d31c51",
		"name": "Komodo-auth",
		"description": "This API is meant to generate **JWT tokens** to use in related applications. All authentication and user management related duties should be addressed in this API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42794844"
	},
	"item": [
		{
			"name": "Register user",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"givenName\": \"{{givenName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"userName\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{domain}}/register",
					"host": [
						"{{domain}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": [
				{
					"name": "Repeated username",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"email@example.com\",\n    \"givenName\": \"name\",\n    \"lastName\": \"lastName\",\n    \"userName\": \"username\",\n    \"password\": \"pass_example*1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:9080/register",
							"host": [
								"localhost"
							],
							"port": "9080",
							"path": [
								"register"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						},
						{
							"key": "Content-Length",
							"value": "47"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Username example is already in use\"\n}"
				},
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"givenName\": \"{{givenName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"userName\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/register",
							"host": [
								"{{domain}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "0"
						}
					],
					"cookie": [],
					"body": null
				},
				{
					"name": "Repeated email",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"givenName\": \"{{givenName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"userName\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/register",
							"host": [
								"{{domain}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						},
						{
							"key": "Content-Length",
							"value": "54"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Email example@email.com is already in use\"\n}"
				},
				{
					"name": "Invalid Username",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"givenName\": \"{{givenName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"userName\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/register",
							"host": [
								"{{domain}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						},
						{
							"key": "Content-Length",
							"value": "173"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"The username must comply with the following requirements: The username contains invalid characters. Only letters, numbers, underscores, and periods are allowed.\"\n}"
				},
				{
					"name": "Invalid password",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"givenName\": \"{{givenName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"userName\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/register",
							"host": [
								"{{domain}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						},
						{
							"key": "Content-Length",
							"value": "225"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"The password must comply with the following requirements: Password must be at least 8 characters long, contain at least one uppercase letter, one special character, and one number. The \\\" character is not allowed.\"\n}"
				},
				{
					"name": "Invalid email",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"givenName\": \"{{givenName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"userName\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/register",
							"host": [
								"{{domain}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						},
						{
							"key": "Content-Length",
							"value": "194"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"The email must comply with the following requirements: The email address is invalid. It must contain an '@' symbol, a domain name, and a top-level domain (e.g., example@domain.com).\"\n}"
				},
				{
					"name": "Email not sent",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"givenName\": \"{{givenName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"userName\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/register",
							"host": [
								"{{domain}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "0"
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Failed to send verification email to example@email.com The user has been successfully created. Log in with your credentials to trigger the verification email again\"\n}"
				},
				{
					"name": "Database unavailable",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"givenName\": \"{{givenName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"userName\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/register",
							"host": [
								"{{domain}}"
							],
							"path": [
								"register"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "46"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Failed to obtain R2DBC Connection\"\n}"
				}
			]
		},
		{
			"name": "Verify Email",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{domain}}/verify?token={{verificationToken}}",
					"host": [
						"{{domain}}"
					],
					"path": [
						"verify"
					],
					"query": [
						{
							"key": "token",
							"value": "{{verificationToken}}"
						}
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/verify?token={{verificationToken}}",
							"host": [
								"{{domain}}"
							],
							"path": [
								"verify"
							],
							"query": [
								{
									"key": "token",
									"value": "{{verificationToken}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Content-Length",
							"value": "0"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Log in",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "{{username}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{password}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{domain}}/login",
					"host": [
						"{{domain}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{domain}}/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "set-cookie",
							"value": "SESSION=b323a2dd-1d6d-4263-8473-435990cc9ed4; Path=/; HTTPOnly; SameSite=Lax"
						},
						{
							"key": "content-length",
							"value": "204"
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJramlzdGlrIiwiaWF0IjoxNzQxMDQxODIxLCJyb2xlcyI6W10sImV4cCI6MTc0MTEyODIyMX0.SGiUZhyIIkaLvbJ0URCJUjZ4U9dzwtn4xatccfgFe2l3r-HmNOFOFAFfX_hvJMYK94cLl_s94UVnNFbA9GMnUQ\"\n}"
				},
				{
					"name": "Failed to log in",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{domain}}/login",
							"host": [
								"{{domain}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "54"
						}
					],
					"cookie": [],
					"body": "{\"error\": \"404 NOT_FOUND \"No static resource login.\"\"}"
				}
			]
		},
		{
			"name": "Update password",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWTtoken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"password\":\"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{domain}}/api/user/updatePassword",
					"host": [
						"{{domain}}"
					],
					"path": [
						"api",
						"user",
						"updatePassword"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\":\"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updatePassword",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updatePassword"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "0"
						}
					],
					"cookie": [],
					"body": null
				},
				{
					"name": "Invalid password",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updatePassword",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updatePassword"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						},
						{
							"key": "Content-Length",
							"value": "225"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"The password must comply with the following requirements: Password must be at least 8 characters long, contain at least one uppercase letter, one special character, and one number. The \\\" character is not allowed.\"\n}"
				},
				{
					"name": "Invalid password",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\":\"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updatePassword",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updatePassword"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain;charset=UTF-8"
						},
						{
							"key": "Content-Length",
							"value": "226"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\"error\": \"The password must comply with the following requirements: Password must be at least 8 characters long, contain at least one uppercase letter, one special character, and one number. The \\\" character is not allowed.\"}"
				},
				{
					"name": "Invalid username",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\":\"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updatePassword",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updatePassword"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						},
						{
							"key": "Content-Length",
							"value": "62"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"No user has been found with the username: kjistik\"\n}"
				},
				{
					"name": "Insufficient permissions",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\":\"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updatePassword",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updatePassword"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "13"
						}
					],
					"cookie": [],
					"body": "Access Denied"
				},
				{
					"name": "Non authenticated",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\":\"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updatePassword",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updatePassword"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "35"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Missing or invalid JWT\"\n}"
				},
				{
					"name": "Expired JWT",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\":\"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updatePassword",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updatePassword"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "35"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Invalid or expired JWT\"\n}"
				}
			]
		},
		{
			"name": "Update email",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWTtoken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{domain}}/api/user/updateEmail",
					"host": [
						"{{domain}}"
					],
					"path": [
						"api",
						"user",
						"updateEmail"
					]
				}
			},
			"response": [
				{
					"name": "Invalid username",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updateEmail",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updateEmail"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						},
						{
							"key": "Content-Length",
							"value": "62"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"No user has been found with the username: kjistik\"\n}"
				},
				{
					"name": "Invalid email",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updateEmail",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updateEmail"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						},
						{
							"key": "Content-Length",
							"value": "194"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"The email must comply with the following requirements: The email address is invalid. It must contain an '@' symbol, a domain name, and a top-level domain (e.g., example@domain.com).\"\n}"
				},
				{
					"name": "Email not sent",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updateEmail",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updateEmail"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "0"
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Failed to send verification email to example@email.com The user has been successfully created. Log in with your credentials to trigger the verification email again\"\n}"
				},
				{
					"name": "Repeated email",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updateEmail",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updateEmail"
							]
						}
					},
					"status": "Conflict",
					"code": 409,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						},
						{
							"key": "Content-Length",
							"value": "54"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Email email@example.com is already in use\"\n}"
				},
				{
					"name": "Insufficient permissions",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updateEmail",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updateEmail"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "13"
						}
					],
					"cookie": [],
					"body": "Access Denied"
				},
				{
					"name": "Non authenticated",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updateEmail",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updateEmail"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "35"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Missing or invalid JWT\"\n}"
				},
				{
					"name": "Expired JWT",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/user/updateEmail",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"user",
								"updateEmail"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "35"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Invalid or expired JWT\"\n}"
				}
			]
		},
		{
			"name": "Update name",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWTtoken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"givenName\":\"{{givenName}}\",\n    \"lastName\":\"{{lastName}}\",\n    \"username\":\"{{targetUsername}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{domain}}/api/support/updateName",
					"host": [
						"{{domain}}"
					],
					"path": [
						"api",
						"support",
						"updateName"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"givenName\":\"{{givenName}}\",\n    \"lastName\":\"{{lastName}}\",\n    \"username\":\"{{targetUsername}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/support/updateName",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"support",
								"updateName"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "0"
						}
					],
					"cookie": [],
					"body": null
				},
				{
					"name": "Non existent user",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"givenName\":\"{{givenName}}\",\n    \"lastName\":\"{{lastName}}\",\n    \"username\":\"{{targetUsername}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/support/updateName",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"support",
								"updateName"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": "",
							"type": "text"
						},
						{
							"key": "Content-Length",
							"value": "61"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"No user has been found with the username: targetUsername\"\n}"
				},
				{
					"name": "Non authenticated",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"givenName\":\"{{givenName}}\",\n    \"lastName\":\"{{lastName}}\",\n    \"username\":\"{{targetUsername}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/support/updateName",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"support",
								"updateName"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "35"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Missing or invalid JWT\"\n}"
				},
				{
					"name": "Insufficient permissions",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"givenName\":\"{{givenName}}\",\n    \"lastName\":\"{{lastName}}\",\n    \"username\":\"{{targetUsername}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/support/updateName",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"support",
								"updateName"
							]
						}
					},
					"status": "Forbidden",
					"code": 403,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "13"
						}
					],
					"cookie": [],
					"body": "Access Denied"
				},
				{
					"name": "Expired JWT",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"givenName\":\"{{givenName}}\",\n    \"lastName\":\"{{lastName}}\",\n    \"username\":\"{{targetUsername}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/support/updateName",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"support",
								"updateName"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "35"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Invalid or expired JWT\"\n}"
				}
			]
		},
		{
			"name": "Assign roles",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWTtoken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"roles\":{{roles}},\n    \"username\":\"{{targetUsername}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{domain}}/api/roles/assignRole",
					"host": [
						"{{domain}}"
					],
					"path": [
						"api",
						"roles",
						"assignRole"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roles\": {{roles}},\n    \"username\": \"{{targetUsername}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/roles/assignRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"roles",
								"assignRole"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "0"
						}
					],
					"cookie": [],
					"body": null
				},
				{
					"name": "Target user not verified",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roles\":{{roles}},\n    \"username\":\"{{targetUsername}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/roles/assignRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"roles",
								"assignRole"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "102"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"User target is not verified. A verification email has been sent to your registered email\"\n}"
				},
				{
					"name": "Insufficient role",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roles\":{{roles}},\n    \"username\":\"{{targetUsername}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/roles/assignRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"roles",
								"assignRole"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain;charset=UTF-8"
						},
						{
							"key": "Content-Length",
							"value": "91"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\"error\": \"Unable to assign the role OWNER. You must have at least the same role to do so\"}"
				},
				{
					"name": "Non existent role",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roles\":{{roles}},\n    \"username\":\"{{targetUsername}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/roles/assignRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"roles",
								"assignRole"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain;charset=UTF-8"
						},
						{
							"key": "Content-Length",
							"value": "54"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						}
					],
					"cookie": [],
					"body": "{\"error\": \"The following is not a valid role: TESTER\"}"
				},
				{
					"name": "Non authenticated",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roles\":{{roles}},\n    \"username\":\"{{targetUsername}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/roles/assignRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"roles",
								"assignRole"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "35"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Missing or invalid JWT\"\n}"
				},
				{
					"name": "Expired JWT",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roles\":{{roles}},\n    \"username\":\"{{targetUsername}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{domain}}/api/roles/assignRole",
							"host": [
								"{{domain}}"
							],
							"path": [
								"api",
								"roles",
								"assignRole"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache, no-store, max-age=0, must-revalidate"
						},
						{
							"key": "Pragma",
							"value": "no-cache"
						},
						{
							"key": "Expires",
							"value": "0"
						},
						{
							"key": "X-Content-Type-Options",
							"value": "nosniff"
						},
						{
							"key": "X-Frame-Options",
							"value": "DENY"
						},
						{
							"key": "X-XSS-Protection",
							"value": "0"
						},
						{
							"key": "Referrer-Policy",
							"value": "no-referrer"
						},
						{
							"key": "content-length",
							"value": "35"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"Invalid or expired JWT\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "domain",
			"value": "http://localhost:9080",
			"type": "string"
		},
		{
			"key": "email",
			"value": "email@example.com",
			"type": "string"
		},
		{
			"key": "givenName",
			"value": "name",
			"type": "string"
		},
		{
			"key": "lastName",
			"value": "lastName",
			"type": "string"
		},
		{
			"key": "username",
			"value": "username",
			"type": "string"
		},
		{
			"key": "verificationToken",
			"value": "jwt_from_email",
			"type": "string"
		},
		{
			"key": "password",
			"value": "pass_example*1",
			"type": "string"
		},
		{
			"key": "JWTtoken",
			"value": "get_from_login",
			"type": "string"
		},
		{
			"key": "targetUsername",
			"value": "targetUsername",
			"type": "string"
		},
		{
			"key": "roles",
			"value": "[\"OWNER\", \"ADMIN\",\"SUPPORT\", \"USER\"]",
			"type": "string"
		}
	]
}